name: Build

on: [push]

jobs:

  # -- TESTS ------------------------------------------------------------------
  tests:
    name: Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['16']

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@911b1af682b685d05d871fe5572549216219b577
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            itunes.apple.com:443
            pipelines.actions.githubusercontent.com:443
            objects.githubusercontent.com:443
            play.google.com:443
            registry.npmjs.org:443
            nodejs.org:443
            snyk.io:443

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@5b949b50c3461bbcd5a540b150c368278160234a # tag=v3.4.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Copy Playlists & Inventory examples
        run: |
          cp src/examples/apps.json config/apps.json
          cp src/examples/config.json config/config.json

      - name: Run Unit-Tests + Code Coverage
        run: npm run test:coverage

      - name: Save Code Coverage
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: code-coverage
          path: coverage

  # -- SONARCLOUD -------------------------------------------------------------
  code-quality:
    name : Code Quality
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@911b1af682b685d05d871fe5572549216219b577
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            pipelines.actions.githubusercontent.com:443
            sonarcloud.io:443
            scanner.sonarcloud.io:443

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Download Code Coverage
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
        with:
          name: code-coverage
          path: coverage

      - name: Get App Version
        run: ./scripts/version.sh

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # -- SAST SCAN --------------------------------------------------------------
  code-security:
    name: Code Security
    runs-on: ubuntu-latest
    needs: tests
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@911b1af682b685d05d871fe5572549216219b577
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nvd.nist.gov:443
            osv-vulnerabilities.storage.googleapis.com:443
            pipelines.actions.githubusercontent.com:443
            pypi.org:443
            registry.npmjs.org:443

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Perform Scan
        uses: ShiftLeftSecurity/scan-action@master

        env:
          WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ANNOTATE_PR: true

      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: reports
          path: reports

  # -- PRE-RELEASE ------------------------------------------------------------
  pre-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    needs:
      - code-quality
      - code-security
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@911b1af682b685d05d871fe5572549216219b577
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # -- BUILD ------------------------------------------------------------------
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: pre-release
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@911b1af682b685d05d871fe5572549216219b577
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4.0.1
        with:
          images: ${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # tag=v2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0

      - name: Login to DockerHub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # tag=v3.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
